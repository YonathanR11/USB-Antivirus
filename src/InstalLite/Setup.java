/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InstalLite;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yonathan Rom√°n
 */
public class Setup extends javax.swing.JFrame {

    /**
     * Creates new form Setup
     */
    
       int seg;
    Thread tiempo = new Thread(){
        public void run(){
            try {
                for (seg = 0; seg<= 100; seg++) {
                    Progresso.setValue(seg);
                    tiempo.sleep(30);
                    imagen();
                }
            } catch (Exception e) {
            }
        }
    };
    
    
   int x;
    int y;
    int PosicionMouse;
    boolean b = true;
    private boolean minimiza = false;
    public static boolean analizando = false;
    public static File f1 = new File("");
    public static File f2 = new File("");
    public static File f3 = new File("");
    public static File f4 = new File("");
    public static File f5 = new File("");
    public static File f6 = new File("");
    public static File[] unidades;
    Object[] items;
    public static String ruta = "";
    public static String uniSelec;
    String[] letters;
    File[] drives;
    boolean[] isDrive;
    Thread hilo;
    private String s1;
    private String s2;
    private Object[] i;
    
    
    public Setup() {
        initComponents();
        this.setLocationRelativeTo(null);
        buscarUnidades();
        btn.setEnabled(false);
    }
    
    
    public void buscarUnidades() {
        DefaultTableModel listUni = (DefaultTableModel) listaUnidades.getModel();
        if (listaUnidades.getSelectedRowCount() > 0) {
            listaUnidades.removeRowSelectionInterval(listaUnidades.getSelectedRow(), listaUnidades.getSelectedRow());
        }
        unidades = File.listRoots();
        Object[] it = new Object[unidades.length];
        for (int i = 0; i < unidades.length; i++) {
            s1 = FileSystemView.getFileSystemView().getSystemDisplayName(unidades[i]);
            s2 = FileSystemView.getFileSystemView().getSystemTypeDescription(unidades[i]);
            if (FileSystemView.getFileSystemView().isFloppyDrive(unidades[i])) {
                s1 = "Unidad de Disquete (A:)";
            }
            if (s1.equalsIgnoreCase("")) {
                s1 = s2;
            }
            it[i] = s1;
        }
        while (listUni.getRowCount() != 0) {
            listUni.removeRow(0);
        }
        ruta = "";
        i = it;
        int s1 = i.length;
        for (int s2 = 0; s2 < s1; s2++) {
            Object it1 = i[s2];
            listUni.addRow(new Object[]{it1});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fondo = new javax.swing.JPanel();
        Panel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaUnidades = new javax.swing.JTable();
        materialButton1 = new principal.MaterialButton();
        Panel2 = new javax.swing.JPanel();
        icon = new javax.swing.JLabel();
        Progresso = new ProgressBarX.RSProgressBar();
        estado = new javax.swing.JLabel();
        btn = new principal.MaterialButton();
        Panel3 = new javax.swing.JPanel();
        Panel4 = new javax.swing.JPanel();
        Panel5 = new javax.swing.JPanel();
        Panel6 = new javax.swing.JPanel();
        Panel7 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Instalar USB Shield Lite");

        Fondo.setBackground(new java.awt.Color(255, 255, 255));
        Fondo.setLayout(new java.awt.CardLayout());

        Panel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Seleccione la unidad para instalar USB Shield Lite: ");

        listaUnidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DISPOSITIVO USB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaUnidades.setRowHeight(22);
        jScrollPane1.setViewportView(listaUnidades);

        materialButton1.setBackground(new java.awt.Color(0, 153, 153));
        materialButton1.setForeground(new java.awt.Color(255, 255, 255));
        materialButton1.setText("Instalar");
        materialButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(materialButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(135, 135, 135))
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(materialButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        Fondo.add(Panel1, "card2");

        Panel2.setBackground(new java.awt.Color(255, 255, 255));
        Panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panel2.add(icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 190, 190));

        Progresso.setBorder(null);
        Progresso.setValue(0);
        Panel2.add(Progresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 198, 430, -1));

        estado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        estado.setText("Instalando...");
        Panel2.add(estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        btn.setBackground(new java.awt.Color(0, 153, 153));
        btn.setForeground(new java.awt.Color(255, 255, 255));
        btn.setText("Finalizar");
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });
        Panel2.add(btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 246, 133, 50));

        Fondo.add(Panel2, "card2");

        Panel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel3Layout = new javax.swing.GroupLayout(Panel3);
        Panel3.setLayout(Panel3Layout);
        Panel3Layout.setHorizontalGroup(
            Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        Panel3Layout.setVerticalGroup(
            Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        Fondo.add(Panel3, "card2");

        Panel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel4Layout = new javax.swing.GroupLayout(Panel4);
        Panel4.setLayout(Panel4Layout);
        Panel4Layout.setHorizontalGroup(
            Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        Panel4Layout.setVerticalGroup(
            Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        Fondo.add(Panel4, "card2");

        Panel5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel5Layout = new javax.swing.GroupLayout(Panel5);
        Panel5.setLayout(Panel5Layout);
        Panel5Layout.setHorizontalGroup(
            Panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        Panel5Layout.setVerticalGroup(
            Panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        Fondo.add(Panel5, "card2");

        Panel6.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel6Layout = new javax.swing.GroupLayout(Panel6);
        Panel6.setLayout(Panel6Layout);
        Panel6Layout.setHorizontalGroup(
            Panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        Panel6Layout.setVerticalGroup(
            Panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        Fondo.add(Panel6, "card2");

        Panel7.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Panel7Layout = new javax.swing.GroupLayout(Panel7);
        Panel7.setLayout(Panel7Layout);
        Panel7Layout.setHorizontalGroup(
            Panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        Panel7Layout.setVerticalGroup(
            Panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        Fondo.add(Panel7, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void materialButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materialButton1ActionPerformed
        if (listaUnidades.getSelectedRowCount() > 0) {
            uniSelec = (String) listaUnidades.getValueAt(listaUnidades.getSelectedRow(), 0);
            char[] aCaracteres = uniSelec.toCharArray();
            for (int x = 0; x < aCaracteres.length; x++) {
                if (String.valueOf(aCaracteres[x]).equals("(")) {
                    ruta = String.valueOf(aCaracteres[(x + 1)]);
                    break;
                }
            }
            String[] opciones = {"Si", "No"};
            int opcion = JOptionPane.showOptionDialog(null, "Se instalara USB Shield Lite en la unidad " + uniSelec + "\n                    ¬øDeseas continuar?", "Setup USB Shield Lite", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, null);
            if (opciones[opcion] == "Si") {
                Fondo.removeAll();
                Fondo.repaint();
                Fondo.revalidate();
                Fondo.add(Panel2);
                Fondo.repaint();
                Fondo.revalidate();
                tiempo.start();
            }

        }
        else {
            JOptionPane.showMessageDialog(null, "Seleccione un dispositivo", "Error", 0);
        }
    }//GEN-LAST:event_materialButton1ActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed
        dispose();
    }//GEN-LAST:event_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Setup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Setup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Setup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Setup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Setup.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Setup.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Setup.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Setup.class.getName()).log(Level.SEVERE, null, ex);
                }
                new Setup().setVisible(true);
            }
        });
    }
    
    public void run() {
        letters = new String[]{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "I", "Z"};

        drives = new File[this.letters.length];
        isDrive = new boolean[this.letters.length];
        for (int i = 0; i < letters.length; i++) {
            drives[i] = new File(letters[i] + ":/");

            isDrive[i] = drives[i].canRead();
        }
        for (;;) {
            for (int i = 0; i < letters.length; i++) {
                boolean pluggedIn = drives[i].canRead();
                if (pluggedIn != isDrive[i]) {
                    if (pluggedIn) {
                        buscarUnidades();
                    } else {
                        try {
                            Thread.sleep(1000L);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Setup.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        buscarUnidades();
                    }
                    isDrive[i] = pluggedIn;
                }
            }
            try {
                Thread.sleep(100L);
            } catch (InterruptedException localInterruptedException1) {
            }
        }
    }
    
    public void imagen() {
        int as = Progresso.getValue();
        if (as <= 50) {
            ImageIcon imagen = new ImageIcon("src/img/1.png");
            Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(icon.getWidth(), icon.getHeight(), Image.SCALE_DEFAULT));
            icon.setIcon(icono);
            this.repaint();
        }
        if (as == 50) {
            ImageIcon imagen = new ImageIcon("src/img/5.png");
            Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(icon.getWidth(), icon.getHeight(), Image.SCALE_DEFAULT));
            icon.setIcon(icono);
            this.repaint();
            String origen,destino;
            origen="/Archivo.av";
            destino=ruta+":";
            System.out.println("Origen: "+origen);
            System.out.println("Destino: "+destino);
            System.out.println("Ruta: "+ruta);
            
            MoverArchivo(origen,destino);
            
        }
        if (as == 100) {
            ImageIcon imagen = new ImageIcon("src/img/10.png");
            Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(icon.getWidth(), icon.getHeight(), Image.SCALE_DEFAULT));
            icon.setIcon(icono);
            this.repaint();
            estado.setText("Finalizado");
            btn.setEnabled(true);
        }
    }
    

                                       //Origen destino
        public void MoverArchivo(String Archivo, String RutaDescarga) {

        try {
			File inFile = new File(Archivo);
			File outFile = new File(RutaDescarga);

			FileInputStream in = new FileInputStream(inFile);
			FileOutputStream out = new FileOutputStream(outFile);

			int c;
			while( (c = in.read() ) != -1)
				out.write(c);

			in.close();
			out.close();
                        System.err.println("Copia exitosa!!!");
		} catch(IOException e) {
			System.err.println("Hubo un error de entrada/salida!!!   "+e);
		}

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Fondo;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JPanel Panel3;
    private javax.swing.JPanel Panel4;
    private javax.swing.JPanel Panel5;
    private javax.swing.JPanel Panel6;
    private javax.swing.JPanel Panel7;
    private ProgressBarX.RSProgressBar Progresso;
    private principal.MaterialButton btn;
    private javax.swing.JLabel estado;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listaUnidades;
    private principal.MaterialButton materialButton1;
    // End of variables declaration//GEN-END:variables
}
